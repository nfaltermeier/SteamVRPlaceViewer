//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_GrabGrip;
        
        private static SteamVR_Action_Boolean p_default_CycleUp;
        
        private static SteamVR_Action_Boolean p_default_CycleDown;
        
        private static SteamVR_Action_Vector2 p_default_Scrub;
        
        private static SteamVR_Action_Boolean p_default_LaserPointer;
        
        private static SteamVR_Action_Boolean p_default_Timeline;
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        public static SteamVR_Action_Boolean default_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_default_GrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_CycleUp
        {
            get
            {
                return SteamVR_Actions.p_default_CycleUp.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_CycleDown
        {
            get
            {
                return SteamVR_Actions.p_default_CycleDown.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_Scrub
        {
            get
            {
                return SteamVR_Actions.p_default_Scrub.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean default_LaserPointer
        {
            get
            {
                return SteamVR_Actions.p_default_LaserPointer.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Timeline
        {
            get
            {
                return SteamVR_Actions.p_default_Timeline.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_CycleUp,
                    SteamVR_Actions.default_CycleDown,
                    SteamVR_Actions.default_Scrub,
                    SteamVR_Actions.default_LaserPointer,
                    SteamVR_Actions.default_Timeline,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_CycleUp,
                    SteamVR_Actions.default_CycleDown,
                    SteamVR_Actions.default_Scrub,
                    SteamVR_Actions.default_LaserPointer,
                    SteamVR_Actions.default_Timeline,
                    SteamVR_Actions.default_Pose};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_CycleUp,
                    SteamVR_Actions.default_CycleDown,
                    SteamVR_Actions.default_LaserPointer,
                    SteamVR_Actions.default_Timeline};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[0];
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.default_Scrub};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[0];
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_CycleUp,
                    SteamVR_Actions.default_CycleDown,
                    SteamVR_Actions.default_Scrub,
                    SteamVR_Actions.default_LaserPointer,
                    SteamVR_Actions.default_Timeline};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabGrip")));
            SteamVR_Actions.p_default_CycleUp = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/CycleUp")));
            SteamVR_Actions.p_default_CycleDown = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/CycleDown")));
            SteamVR_Actions.p_default_Scrub = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/Scrub")));
            SteamVR_Actions.p_default_LaserPointer = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/LaserPointer")));
            SteamVR_Actions.p_default_Timeline = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Timeline")));
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
        }
    }
}
